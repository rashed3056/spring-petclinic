pipeline {
    agent any

    environment {
        JAVA_HOME = '/usr/lib/jvm/java-17-amazon-corretto'
        MAVEN_HOME = '/usr/share/maven'
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${env.PATH}"
        NEXUS_URL = 'http://ec2-3-82-127-128.compute-1.amazonaws.com:8081/repository/maven-releases/' // Replace with your Nexus repository URL
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'SONAR_TOKEN')]) {
                    withSonarQubeEnv('SonarQube') {
                        sh '''
                        mvn sonar:sonar \
                          -Dsonar.projectKey=rashed3056_myspringpetclinic \
                          -Dsonar.organization=rashed3056 \
                          -Dsonar.host.url=https://sonarcloud.io \
                          -Dsonar.login=$SONAR_TOKEN
                        '''
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                script {
                    // Replace the encoded string with your actual Base64-encoded username:password
                    def encodedAuth = "Basic dXNlcm5hbWU6cGFzc3dvcmQ="  
                    sh """
                    curl -X POST -H "Authorization: ${encodedAuth}" \
                    --upload-file target/spring-petclinic-3.3.0-SNAPSHOT.jar \
                    ${NEXUS_URL}org/springframework/samples/spring-petclinic/3.3.0-SNAPSHOT/spring-petclinic-3.3.0-SNAPSHOT.jar
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Build and deployment to Nexus successful!'
        }

        failure {
            echo 'Build or deployment failed!'
        }
    }
}
